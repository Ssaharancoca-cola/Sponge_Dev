// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DAL.Models
{
    public partial class SPONGE_Context : DbContext
    {
        public SPONGE_Context()
        {
        }

        public SPONGE_Context(DbContextOptions<SPONGE_Context> options)
            : base(options)
        {
        }

        public virtual DbSet<SPG_APPROVALSTATUS> SPG_APPROVALSTATUS { get; set; }
        public virtual DbSet<SPG_CONFIGDATA> SPG_CONFIGDATA { get; set; }
        public virtual DbSet<SPG_CONFIGURATION> SPG_CONFIGURATION { get; set; }
        public virtual DbSet<SPG_CONFIG_FILTERS> SPG_CONFIG_FILTERS { get; set; }
        public virtual DbSet<SPG_CONFIG_FILTERS_VALUE> SPG_CONFIG_FILTERS_VALUE { get; set; }
        public virtual DbSet<SPG_CONFIG_STRUCTURE> SPG_CONFIG_STRUCTURE { get; set; }
        public virtual DbSet<SPG_DOCUMENT> SPG_DOCUMENT { get; set; }
        public virtual DbSet<SPG_GETTIMECODE> SPG_GETTIMECODE { get; set; }
        public virtual DbSet<SPG_GET_PERIOD> SPG_GET_PERIOD { get; set; }
        public virtual DbSet<SPG_MPP_HIERARCHY> SPG_MPP_HIERARCHY { get; set; }
        public virtual DbSet<SPG_MPP_MASTER> SPG_MPP_MASTER { get; set; }
        public virtual DbSet<SPG_ROLE> SPG_ROLE { get; set; }
        public virtual DbSet<SPG_SENDORRESENDTASK> SPG_SENDORRESENDTASK { get; set; }
        public virtual DbSet<SPG_SUBFUNCTION> SPG_SUBFUNCTION { get; set; }
        public virtual DbSet<SPG_SUBJECTAREA> SPG_SUBJECTAREA { get; set; }
        public virtual DbSet<SPG_SUBJECT_DATACOLLECTION> SPG_SUBJECT_DATACOLLECTION { get; set; }
        public virtual DbSet<SPG_SUBJECT_DIMENSION> SPG_SUBJECT_DIMENSION { get; set; }
        public virtual DbSet<SPG_SUBJECT_GENERIC_MASTER> SPG_SUBJECT_GENERIC_MASTER { get; set; }
        public virtual DbSet<SPG_SUBJECT_MASTER> SPG_SUBJECT_MASTER { get; set; }
        public virtual DbSet<SPG_TEMPLATE> SPG_TEMPLATE { get; set; }
        public virtual DbSet<SPG_TIMECODE> SPG_TIMECODE { get; set; }
        public virtual DbSet<SPG_TIMELEVEL> SPG_TIMELEVEL { get; set; }
        public virtual DbSet<SPG_UOM> SPG_UOM { get; set; }
        public virtual DbSet<SPG_USERS> SPG_USERS { get; set; }
        public virtual DbSet<SPG_USERS_FUNCTION> SPG_USERS_FUNCTION { get; set; }
        public virtual DbSet<v_tversion> v_tversion { get; set; }
        public virtual DbSet<v_version> v_version { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                //optionsBuilder.UseSqlServer("Data Source=zwdmyad0001;Initial Catalog=SPONGE_DEV;Persist Security Info=True;User ID=SPONGE_DEV_APP;Password=SJX)^8nVYfQ#3D;TrustServerCertificate=True");
                optionsBuilder.UseSqlServer("Data Source=zwqmyad0001;Initial Catalog=SPONGE_QA;Persist Security Info=True;User ID=SPONGE_QA_APP;Password=Lw#Bbt/1sPBG;TrustServerCertificate=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SPG_APPROVALSTATUS>(entity =>
            {
                entity.Property(e => e.DESCRIPTION)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_CONFIGDATA>(entity =>
            {
                entity.HasKey(e => e.CONFIGDATA_ID)
                    .HasName("PK__SPG_CONF__7FCEAA71EDFD26BB");

                entity.Property(e => e.DATE_FROM).HasColumnType("date");

                entity.Property(e => e.DOCUMENT_ID)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.DT1).HasColumnType("date");

                entity.Property(e => e.DT10).HasColumnType("date");

                entity.Property(e => e.DT2).HasColumnType("date");

                entity.Property(e => e.DT3).HasColumnType("date");

                entity.Property(e => e.DT4).HasColumnType("date");

                entity.Property(e => e.DT5).HasColumnType("date");

                entity.Property(e => e.DT6).HasColumnType("date");

                entity.Property(e => e.DT7).HasColumnType("date");

                entity.Property(e => e.DT8).HasColumnType("date");

                entity.Property(e => e.DT9).HasColumnType("date");

                entity.Property(e => e.LAST_UPDATED_TIME_STAMP).HasColumnType("datetime");

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SOURCE_SYSTEM_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VC0)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC10)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC11)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC12)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC13)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.VC14)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC15)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC16)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC17)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC18)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC19)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC20)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC21)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC22)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC23)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC24)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC25)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC26)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC27)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC28)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC29)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC3)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC30)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC31)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC32)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC33)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC34)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC35)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC36)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC37)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC38)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC39)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC4)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC40)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC41)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC42)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC43)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC44)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC45)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC46)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC47)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC48)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC49)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC5)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC50)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC6)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC7)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC8)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VC9)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_CONFIGURATION>(entity =>
            {
                entity.HasKey(e => e.CONFIG_ID)
                    .HasName("PK__SPG_CONF__8AEE09EEC75E67F4");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.APPROVER_EMAILD)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.APPROVER_ID)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.APPROVER_NAME)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Config_Name)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Created_By)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Created_On).HasColumnType("date");

                entity.Property(e => e.DATA_COLLECTION)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EFFECTIVE_FROM).HasColumnType("date");

                entity.Property(e => e.EFFECTIVE_TO).HasColumnType("date");

                entity.Property(e => e.IS_POPULATED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_DATE).HasColumnType("date");

                entity.Property(e => e.ONLINEDATAENTRY)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SCHEDULED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.USER_ID)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WHERECLAUSE).IsUnicode(false);
            });

            modelBuilder.Entity<SPG_CONFIG_FILTERS>(entity =>
            {
                entity.HasKey(e => e.CONFIG_FILTER_ID)
                    .HasName("PK__SPG_CONF__43E734DD0DA9B17F");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_ON).HasColumnType("datetime");

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_COLUMN)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_ON).HasColumnType("datetime");
            });

            modelBuilder.Entity<SPG_CONFIG_FILTERS_VALUE>(entity =>
            {
                entity.HasKey(e => e.CONFIG_FILTER_VAL_ID)
                    .HasName("PK__SPG_CONF__AD2233F9983D3FDF");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_ON).HasColumnType("date");

                entity.Property(e => e.FILTER_TEXT)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FILTER_VALUE)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FLAG_CODE)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FLAG_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_ON).HasColumnType("date");
            });

            modelBuilder.Entity<SPG_CONFIG_STRUCTURE>(entity =>
            {
                entity.HasKey(e => e.CONFIGUSER_ID)
                    .HasName("PK__SPG_CONF__2C9944AE5B6869D7");

                entity.Property(e => e.COLLECTION_TYPE)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DATA_TYPE)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_NAME)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_TYPE)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ETL_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FIELD_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.GROUPCOLUMNNAME)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ISCUSTOMIZED)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ISGENERATE_MPP)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_ETL)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_FILTER)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_KEY)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_LOOKUP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_SHOW)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LEVEL)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LOOKUP_CODE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LOOKUP_TYPE)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UOM)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.USER_ID)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_DOCUMENT>(entity =>
            {
                entity.HasKey(e => e.DocumentID)
                    .HasName("PK__SPG_DOCU__1ABEEF6F4384A35C");

                entity.Property(e => e.APPROVEDON).HasColumnType("date");

                entity.Property(e => e.APPROVERID)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.APPROVER_NAME)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.COMMENTS)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FILE_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FILE_PATH)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ID)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.UPLOADDATE).HasColumnType("datetime");

                entity.Property(e => e.UPLOADEDBY)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_GETTIMECODE>(entity =>
            {
                entity.HasKey(e => e.CONFIG_TIMECODE_ID)
                    .HasName("PK__SPG_GETT__E87481AB1A06B514");

                entity.Property(e => e.COLUMN_CODE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DATA_TYPE)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_NAME)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.DOCUMENT_ID)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.FORTIMECODE)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_GET_PERIOD>(entity =>
            {
                entity.HasKey(e => e.PERIOD_ID)
                    .HasName("PK__SPG_GET___B513F7BB5141BCB5");

                entity.Property(e => e.COLUMN_TEXT)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FREQUENCY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FREQUENCY_DISPLAY_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PERIOD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TIME_LEVEL)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TIME_LEVEL_DISPLAY_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_MPP_HIERARCHY>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ATTR_DISPLAY_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ATTR_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DIMENSION_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LEVEL_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_MPP_MASTER>(entity =>
            {
                entity.HasKey(e => e.MPP_MASTER_ID);

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.COLUMN_DISPLAY_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.COLUMN_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IS_KEY)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_DISPLAY_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MPP_DIMENSION_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_ROLE>(entity =>
            {
                entity.HasKey(e => e.ROLE_ID);

                entity.Property(e => e.ACTIVE_FLAG)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_ON).HasColumnType("date");

                entity.Property(e => e.ROLE_NAME)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_SENDORRESENDTASK>(entity =>
            {
                entity.Property(e => e.CREATEDBY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATEDDATE).HasColumnType("datetime");

                entity.Property(e => e.DATA_COLLECTION)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ESCALATIONDATE).HasColumnType("date");

                entity.Property(e => e.FORTIMECODE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IS_AUTO_MANUAL)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IS_POPULATED)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOCKDATE).HasColumnType("date");

                entity.Property(e => e.ONTIMECODE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PERIOD_FROM).HasColumnType("date");

                entity.Property(e => e.PERIOD_TO).HasColumnType("date");

                entity.Property(e => e.UPLOADREMINDERDATE).HasColumnType("date");
            });

            modelBuilder.Entity<SPG_SUBFUNCTION>(entity =>
            {
                entity.HasKey(e => e.SUBFUNCTION_ID)
                    .HasName("PK__SPG_SUBF__9E87AF8F673847D6");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.COUNTRY_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.FUNCTION_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_DATE).HasColumnType("datetime");

                entity.Property(e => e.SUBFUNCTION_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_SUBJECTAREA>(entity =>
            {
                entity.HasKey(e => e.SUBJECTAREA_ID)
                    .HasName("PK__SPG_SUBJ__568D7B4123EA66AC");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.FREQUENCY)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_DATE).HasColumnType("datetime");

                entity.Property(e => e.ONTIMELEVEL)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PERIOD)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.REPORTING_PERIOD)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SUBJECTAREA_NAME)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SUBJECTAREA_TABLE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TIME_LEVEL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VERSION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<SPG_SUBJECT_DATACOLLECTION>(entity =>
            {
                entity.HasKey(e => e.DATACOLLECT_ID)
                    .HasName("PK__SPG_SUBJ__5EE33DA5FD593EC6");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.DATA_TYPE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_NAME)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_TYPE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FIELD_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IS_LOOKUP)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LOOKUP_TYPE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_DATE).HasColumnType("datetime");

                entity.Property(e => e.UOM)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_SUBJECT_DIMENSION>(entity =>
            {
                entity.HasKey(e => e.SUBJECT_DIMENSION_ID)
                    .HasName("PK__SPG_SUBJ__8E18E607C25AA470");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_BY)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MODIFIED_DATE).HasColumnType("datetime");

                entity.Property(e => e.MPP_DIMENSION_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_SUBJECT_GENERIC_MASTER>(entity =>
            {
                entity.HasKey(e => e.SUBJECT_GENERIC_ID)
                    .HasName("PK__SPG_SUBJ__A86B436D15109988");

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FIELD_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IS_KEY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_SHOW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_SUBJECT_MASTER>(entity =>
            {
                entity.HasKey(e => e.SUBJECT_MASTER_ID)
                    .HasName("PK__SPG_SUBJ__919B773E6E8AF83B");

                entity.Property(e => e.DIMENSION_TABLE)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DISPLAY_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FIELD_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IS_KEY)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IS_SHOW)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MASTER_NAME)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_TEMPLATE>(entity =>
            {
                entity.HasKey(e => e.TEMPLATE_ID)
                    .HasName("PK__SPG_TEMP__BACD412FBBFC78D6");

                entity.Property(e => e.CREATEDBY)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CREATEDON).HasColumnType("datetime");

                entity.Property(e => e.DISCARD_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DISCARD_REASON)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ESCALATION_DATE).HasColumnType("date");

                entity.Property(e => e.FILE_CODE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FILE_NAME)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FORTIME)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FORTIMECODE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.GENERATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.LOCK_DATE).HasColumnType("date");

                entity.Property(e => e.ONTIME)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ONTIMECODE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PERIOD_FROM).HasColumnType("date");

                entity.Property(e => e.PERIOD_TO).HasColumnType("date");

                entity.Property(e => e.UPDATEDBY)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UPDATEDON).HasColumnType("datetime");

                entity.Property(e => e.UPLOAD_REMINDER_DATE).HasColumnType("date");
            });

            modelBuilder.Entity<SPG_TIMECODE>(entity =>
            {
                entity.HasKey(e => e.TIMECODE_ID);

                entity.Property(e => e.DESCRIPTION)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FROMDATE).HasColumnType("date");

                entity.Property(e => e.TIMECODE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TODATE).HasColumnType("date");
            });

            modelBuilder.Entity<SPG_TIMELEVEL>(entity =>
            {
                entity.Property(e => e.ACTIVE)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DESCRIPTION)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TIMELEVELCODE)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_UOM>(entity =>
            {
                entity.HasKey(e => e.UOM_ID);

                entity.Property(e => e.ACTIVE_FLAG)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UOM_CODE)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UOM_DESC)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_USERS>(entity =>
            {
                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CREATED_BY)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CREATED_DATE).HasColumnType("datetime");

                entity.Property(e => e.EMAIL_ID)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastMODIFIEDBY)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastMODIFIEDDATE).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PHONE_NO)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.USER_ID)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPG_USERS_FUNCTION>(entity =>
            {
                entity.HasKey(e => e.USER_FUNCTIONID)
                    .HasName("PK__SPG_USER__2B6F6C27D8D7115B");

                entity.Property(e => e.ACTIVE_FLAG)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.USER_ID)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<v_tversion>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.VERSION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<v_version>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.VERSION)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}