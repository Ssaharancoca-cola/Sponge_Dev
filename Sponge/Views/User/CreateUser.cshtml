@model Sponge.ViewModel.GetUserinfo;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form id="Userform">
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Create User</p>
                <form class="forms-sample">
                    <div class="form-group row ">
                        <div class="col">
                            <label for="exampleInputUsername1">User ID</label>
                                @if (Model != null && Model.UserId != null)
                                {
                                    <input type="text" class="form-control" id="txtUserIdForNewUser" name="userId" placeholder="User ID" value="@Model.UserId">
                                }
                                else
                                {
                                    <input type="text" class="form-control" id="txtUserIdForNewUser" name="userId" placeholder="User ID">
                                    <div class="row">
                                    <div class="col">
                                        <button type="button" id="btnSearch" class="btn btn-primary">Search</button>
                                    </div>
                                    </div>
                                }                               
                            
                        </div>
                        <div class="col">
                            <label for="UserName">User Name</label>
                            @if(Model != null && Model.UserName != null)
                                {
                                    <input type="text" class="form-control" readonly id="UserName" name="userName" placeholder="User Name" value="@Model.UserName">
                                }
                                else
                                {
                                    <input type="text" class="form-control" readonly id="UserName" name="userName" placeholder="User Name">
                                }
                            </div>
                        <div class="col">
                            <label for="exampleInputEmail1">Email</label>
                                @if (Model != null && Model.Email != null)
                                {
                                    <input type="email" class="form-control" readonly id="email" name="email" placeholder="Email" value="@Model.Email">
                                }
                                else
                                {
                                    <input type="email" class="form-control" readonly id="email" name="email" placeholder="Email">
                                }
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col">
                            <label for="exampleInputConfirmPassword1">Role</label>
                                <select class="form-control" name="role">
                                <option selected>Role</option>
                                @if(Model !=null && Model.Role != null)
                                {
                                    @foreach (var role in Model.Role) 
                                    {
                                           @* <option value="@role.Text">@role.Value</option> *@

                                    }    
                                }
                                else{
                                @foreach (var role in ViewBag.Role)
                                {
                                    <option value="@role.Text">@role.Value</option>
                                }
                                    }
                            </select>
                        </div>

                        <div class="col">
                            <label for="">SubFunction</label>
                            <div class="dropdown">
                                    <button class="btn dropdown-toggle bth-custom-multi" name="subFunction" type="button" id="multiSelectDropdown"
                                        data-bs-toggle="dropdown" aria-expanded="false">
                                    Select
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="multiSelectDropdown">
                                        @if(Model != null && Model.SubFunction != null)
                                        {
                                            
                                        }
                                        else
                                    {
                                        @foreach (var subfunction in ViewBag.SubFunction)
                                        {
                                            <li>
                                            <label>
                                                        <input type="checkbox" name="subFunction" value=@subfunction.Text>@subfunction.Value
                                            </label>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>

                        <div class="col">
                            <label for="exampleInputConfirmPassword1">Status</label>
                                <select class="form-control" name="status">
                                <option selected>Select</option>
                                <option value="Y">Active</option>
                                <option value="N">Inactive</option>
                            </select>

                        </div>
                    </div>                    
                        <button type="button" class="btn btn-light mr-2" onclick="location.href='@Url.Action("ManageUser", "User")'">Cancel</button>
                        @if (Model != null)
                        {
                            <button type="submit" name="Command" value="Update" class="btn btn-primary">Update</button>
                        }
                        else
                        {
                            <button type="submit" name="Command" id="btnSave" value="Save" class="btn btn-primary">Save</button>
                        }
                </form>
            </div>
        </div>
    </div>
</div>
</form>
<script src="https://code.jquery.com/jquery-3.7.0.js"></script>

<script>

</script>
<!-- End plugin js for this page -->
<!-- inject:js -->
<script src="~/assists/js/hoverable-collapse.js"></script>
<script src="~/assists/js/template.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- End plugin js for this page -->
<!-- inject:js -->
<script src="~/assists/js/hoverable-collapse.js"></script>
<script src="~/assists/js/template.js"></script>

<!-- endinject -->
<script>
    const chBoxes = document.querySelectorAll('.dropdown-menu input[type="checkbox"]');
    const dpBtn = document.getElementById('multiSelectDropdown');
    let mySelectedListItems = [];

    function handleCB() {
        mySelectedListItems = [];
        let mySelectedListItemsText = '';

        chBoxes.forEach((checkbox) => {
            if (checkbox.checked) {
                mySelectedListItems.push(checkbox.value);
                mySelectedListItemsText += checkbox.value + ', ';
            }
        });

        dpBtn.innerText =
            mySelectedListItems.length > 0
                ? mySelectedListItemsText.slice(0, -2) : 'Select';
    }

    chBoxes.forEach((checkbox) => {
        checkbox.addEventListener('change', handleCB);
    });

    $(document).ready(function () {        

        $("#btnSearch").click(function (event) {
            event.preventDefault();

            var userId = $('#txtUserIdForNewUser').val();
            if (userId.trim(' ') == "") {
                alert("Please enter User Id");
                return false;
            };
            $.ajax({
                url: '/User/GetUserInfo',
                data: { userId: userId },
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    debugger;
                    $('#email').val(data.userEmail);
                    $('#UserName').val(data.userName);
                    if (data.errorMsg != "" && data.errorMsg != null)
                    {
                        alert(data.errorMsg);
                        return false;
                    }
                },
                error: function (error) {
                    console.log('Error: ', error);
                }
            });
        });
        $("#btnSave").click(function (event) {
            event.preventDefault();
            var form = $('#Userform').serialize();
            $.ajax({
                url: '@Url.Action("SaveUser", "User")',
                data: form,
                type: 'POST',
                success: function (data) {
                    debugger;
                    onSuccess(data);
                },
                error: function (error) {
                    console.log('Error: ', error);
                }
            });
        });
    });

</script>
