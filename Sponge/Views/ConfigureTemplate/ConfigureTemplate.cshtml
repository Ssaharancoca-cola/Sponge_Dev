@model IEnumerable<Sponge.ViewModel.GetUserinfo>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-12 stretch-card grid-margin">
        <div class="card">
            <div class="card-body">
                <p class="card-title">
                    Configure Template
                </p>
                <div class="forms-sample">
                    <div class="form-group row">

                        <div class="col">
                            <label for="subjectAreaName">Subject Area Name</label>
                            <select class="form-control" name="SubjectArea">
                                <option selected>Select</option>
                                @foreach (var f in ViewBag.SubjectArea)
                                {
                                    <option value="@f.Text"  selected>@f.Value</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col ">
                <div class="table-responsive">

                    <table id="example" class="display expandable-table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Assign To</th>
                                <th>Data Filter</th>
                                <th>Setup </th>
                               
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.UserName</td>
                                   
                                    <td>
                                        <a href="@Url.Action("DataFilter", "ConfigureTemplate", new {id = item.UserId})" style="background-color:lightcoral" class="btn btn-outline-primary btn-icon-text">
                                            <i class="ti-file btn-icon-prepend"></i>
                                            Data Filter
                                        </a>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Setup", "ConfigureTemplate", new {id = item.UserId})" class="btn btn-outline-primary btn-icon-text">
                                            <i class="ti-file btn-icon-prepend"></i>
                                            Setup
                                        </a>
                                    </td>
                                </tr>
                            }
                            
                        </tbody>
                    </table>
                </div>
                </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<!-- Plugin js for this page -->
<script src="https://code.jquery.com/jquery-3.7.0.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script>
    new DataTable('#example', {
        order: [[3, 'desc']]
    });
    //Initialize the Multiselect Dropdown:

</script>
<!-- End plugin js for this page -->
<!-- inject:js -->
<script src="~/assists/js/hoverable-collapse.js"></script>
<script src="~/assists/js/template.js"></script>

<!-- endinject -->
<script>
    const chBoxes = document.querySelectorAll('.dropdown-menu input[type="checkbox"]');
    const dpBtn = document.getElementById('multiSelectDropdown');
    let mySelectedListItems = [];

    function handleCB() {
        mySelectedListItems = [];
        let mySelectedListItemsText = '';

        chBoxes.forEach((checkbox) => {
            if (checkbox.checked) {
                mySelectedListItems.push(checkbox.value);
                mySelectedListItemsText += checkbox.value + ', ';
            }
        });

        dpBtn.innerText =
            mySelectedListItems.length > 0
                ? mySelectedListItemsText.slice(0, -2) : 'Select';
    }

    chBoxes.forEach((checkbox) => {
        checkbox.addEventListener('change', handleCB);
    });
</script>
<!-- <script src="assists/js/virtual-select.min.js"></script>
<script>
    VirtualSelect.init({
        ele: 'select'
    });
</script> -->
