@model Sponge.Models.SaveDataCollection
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedSubjectArea = TempData["selectedSubjectArea"] as int?;
    TempData.Keep();
}
@using (Html.BeginForm("SaveDataCollection", "ConfigureSubjectArea",Model, FormMethod.Post))
{
<div class="row">
    <div class="col-md-12 stretch-card grid-margin">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Setup Data Collection </p>
                <div class="table-responsive">
                    <table id="example" class="display expandable-table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Display Name</th>
                                <th>Field Name</th>
                                <th>Is Look Up</th>
                                <th>Lookup Type</th>
                                <th>Data Type</th>
                                <th>UOM</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                        <input type="text" class="form-control displayName" name="data[0].DisplayName">
                                    </td>
                                <td>
                                        <input type="text" class="form-control fieldName" name="data[0].FieldName">
                                    </td>
                                <td>
                                        <select class="form-control isLookUp" name="data[0].IsLookUp">
                                            <option value="N" selected>No</option>
                                            <option value="Y">Yes</option>
                                    </select>
                                </td>
                                <td>
                                        <select class="form-control lookUpType" name="data[0].LookUpType">                                       

                                    </select>
                                </td>
                                <td>
                                    <select class="form-control dataType" name="data[0].DataType">
                                            <option value="VC">String</option>
                                            <option value="N">Number</option>
                                            <option value="DT">Date</option>
                                            <option value="P">Perchent</option>
                                    </select>
                                </td>
                            
                                <td>
                                        <select class="form-control uOM" name="data[0].UOM">
                                        <option selected>Select</option>

                                    </select>
                                </td>
                            </tr>                           
                        </tbody>
                    </table>
                        <button type="button" id="addRow" class="btn btn-success">Add Row</button>

                </div>
                    <button type="submit" id="saveData" class="btn btn-primary ">Next</button>
            </div>
        </div>
    </div>
</div>
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        var counter = 1;
        var limit = 10;

        $("#addRow").click(function () {
            if (counter >= limit) {
                alert('You can only add up to 10 rows');
                return false;
            }

            var newRowContents = '<tr>'
                + '<td><input type="text" class="form-control displayName" name="data[' + counter + '].DisplayName"></td>'
                + '<td><input type="text" class="form-control fieldName" name="data[' + counter + '].FieldName"></td>'
                + '<td><select class="form-control isLookUp" name="data[' + counter + '].IsLookUp"><option value="N" selected>No</option><option value="Y">Yes</option></select></td>'
                + '<td><select class="form-control lookUpType" name="data[' + counter + '].LookUpType"></select></td>'
                + '<td><select class="form-control dataType" name="data[' + counter + '].DataType"><option value="String" selected>String</option><option value="Number">Number</option><option value="Date">Date</option><option value="Perchent">Perchent</option></select></td>'
                + '<td><select class="form-control uOM" name="data[' + counter + '].UOM"><option selected>Select</option></select></td>'
                + '</tr>';
            counter++;

            $("#example tbody").append(newRowContents);

            // Populate UOM dropdown for newly added row
            populateUOM($("#example tbody tr:last .uOM"));

            // Add change event for newly added IsLookUp select
            $("#example tbody tr:last .isLookUp").change(function () {
                var lookupTypeField = $(this).closest('tr').find('.lookUpType');
                if ($(this).val() == "1") {
                    $.ajax({
                        url: '@Url.Action("GetMasterName", "ConfigureSubjectArea")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            lookupTypeField.empty();
                            $.each(data, function (i, item) {
                                lookupTypeField.append($('<option>', {
                                    value: item.masteR_NAME,
                                    text: item.masteR_NAME
                                }));
                            });
                            lookupTypeField.prop('disabled', false);
                        },
                        error: function () {
                            alert('Failed to retrieve master name.');
                        }
                    });
                } else {
                    lookupTypeField.prop('disabled', true);
                }
            });
        });
        // Make the LookupType readonly by default
        $(".lookUpType").prop('disabled', true);

        // Populate UOM dropdown
        $('.uOM').each(function () {
            populateUOM($(this));
        });

        // Toggle readonly status of LookupType based on IsLookUp selection
        $(".isLookUp").change(function () {
            var lookupTypeField = $(this).closest('tr').find('.lookUpType');
            if ($(this).val() == "Y") {
                $.ajax({
                    url: '@Url.Action("GetMasterName", "ConfigureSubjectArea")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        lookupTypeField.empty();
                        $.each(data, function (i, item) {
                            lookupTypeField.append($('<option>', {
                                value: item.masteR_NAME,
                                text: item.masteR_NAME
                            }));
                        });
                        lookupTypeField.prop('disabled', false);
                    },
                    error: function () {
                        alert('Failed to retrieve master name.');
                    }
                });
            } else {
                lookupTypeField.prop('disabled', true);
            }
        });
    });

    function populateUOM($element) {
        $.ajax({
            url: '@Url.Action("GetUOM", "ConfigureSubjectArea")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $element.empty();
                $.each(data, function (i, item) {
                    $element.append($('<option>', {
                        value: item.uoM_CODE,
                        text: item.uoM_DESC
                    }));
                });
            },
            error: function () {
                alert('Failed to retrieve UOM.');
            }
        });
    }
</script>